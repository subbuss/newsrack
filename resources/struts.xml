<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE struts PUBLIC
    "-//Apache Software Foundation//DTD Struts Configuration 2.0//EN"
    "http://struts.apache.org/dtds/struts-2.0.dtd">
<struts>
  <constant name="struts.devMode" value="false" />
  <constant name="struts.url.includeParams" value="none" />
  <constant name="struts.enable.DynamicMethodInvocation" value="false"/>
    
  <package name="app-default" extends="struts-default">
      <!-- Change the default result type to freemarker -->
    <result-types>
      <result-type name="freemarker" class="org.apache.struts2.views.freemarker.FreemarkerResult" default="true" />
    </result-types>

    <interceptors>  
      <!-- Login Interceptor that handles authentication for actions that require a signed-in user -->
      <interceptor name="login" class="newsrack.web.LoginInterceptor" />

      <!-- Simple stack without authentication -->
      <interceptor-stack name="simpleStack">
        <interceptor-ref name="servletConfig" /> 
        <interceptor-ref name="conversionError" /> 
        <interceptor-ref name="validation"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
        <interceptor-ref name="workflow"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
      </interceptor-stack>

      <interceptor-stack name="simpleStackWithParams">
        <interceptor-ref name="servletConfig" /> 
        <interceptor-ref name="params"> <param name="excludeParams">dojo\..*</param> </interceptor-ref>
        <interceptor-ref name="conversionError" /> 
        <interceptor-ref name="validation"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
        <interceptor-ref name="workflow"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
      </interceptor-stack>

      <!-- Simple stack with authentication -->
      <interceptor-stack name="simpleLoginStack">
        <interceptor-ref name="servletConfig" /> 
        <interceptor-ref name="login" />
        <interceptor-ref name="conversionError" /> 
        <interceptor-ref name="validation"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
        <interceptor-ref name="workflow"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
      </interceptor-stack>      
      
        <!-- simple login stack with file upload capability -->  
      <interceptor-stack name="simpleLoginFileStack">
        <interceptor-ref name="servletConfig" /> 
        <interceptor-ref name="fileUpload" />         
		  <interceptor-ref name="params"> <param name="excludeParams">dojo\..*</param> </interceptor-ref>
        <interceptor-ref name="login" />
        <interceptor-ref name="conversionError" /> 
        <interceptor-ref name="validation"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
        <interceptor-ref name="workflow"> <param name="excludeMethods">input,back,cancel,browse</param> </interceptor-ref>
      </interceptor-stack>        
    </interceptors>   
    
    <default-interceptor-ref name="simpleStack" />
  
    <global-results>
      <result name="unhandledException">/ftl/internal.error.ftl</result>
      <result name="login">/ftl/forms/login.ftl</result>
      <result name="internal.app.error">/ftl/internal.error.ftl</result>
      <result name="home" type="redirectAction">home</result>
    </global-results>

    <global-exception-mappings>
      <exception-mapping exception="java.lang.Throwable" result="unhandledException"/>
    </global-exception-mappings>
  </package>

    <!-- Default "root" package for newsrack --> 
  <package name="newsrack" extends="app-default">
    <action name="home" class="newsrack.web.BrowseAction">
      <result name="browse.main">/ftl/browse/main.ftl</result> <!-- this is the only possible result! -->
    </action>

    <action name="selected-topics"> <result>/ftl/category.selection.ftl</result> </action>

    <action name="register" class="newsrack.web.RegisterAction">
      <interceptor-ref name="simpleStackWithParams" />
      <result>/ftl/user/registration-success.ftl</result>
      <result name="input">/ftl/forms/register.ftl</result>
    </action>

    <action name="login" class="newsrack.web.LoginAction">
      <result>/ftl/user/home.ftl</result>
      <result name="admin.login">/ftl/admin/home.ftl</result>
      <result name="input">/ftl/forms/login.ftl</result>
    </action>

    <action name="logout" class="newsrack.web.UserAction" method="logout" />

    <action name="browse" class="newsrack.web.BrowseAction">
      <result name="browse.main">/ftl/browse/main.ftl</result>
      <result name="browse.issue">/ftl/browse/issue.ftl</result>
      <result name="browse.cat">/ftl/browse/cat.ftl</result>
      <result name="browse.news">/ftl/browse/news.ftl</result>
      <result name="browse.user">/ftl/browse/user.ftl</result>
    </action>

    <action name="browse-source" class="newsrack.web.BrowseAction" method="browseSource">
      <interceptor-ref name="simpleLoginStack" />
      <result>/ftl/browse/source.ftl</result>
      <result name="input">/ftl/forms/browse-sources.ftl</result>
      <result name="browse.main">/ftl/browse/main.ftl</result>
    </action>

    <action name="public-files" class="newsrack.web.PublicFilesAction">
      <interceptor-ref name="simpleLoginStack" />
      <result>/ftl/public.files.ftl</result>
    </action>
  </package>

  <package name="news" extends="app-default" namespace="/news">
    <default-interceptor-ref name="simpleLoginStack" />     

    <action name="delete" class="newsrack.web.DeleteArticlesAction">
      <result>/ftl/browse/news.ftl</result>
    </action>

    <action name="display" class="newsrack.web.DisplayNewsItemAction">
      <interceptor-ref name="simpleStack" />
      <result>/ftl/display.newsitem.ftl</result>
      <result name="error">/ftl/display.newsitem.ftl</result>
    </action>

    <action name="download" class="newsrack.web.DownloadNewsAction">
      <result>/ftl/download.ftl</result>
      <result name="error">/ftl/download.ftl</result>
    </action>

    <action name="reclassify" class="newsrack.web.ReclassifyAction">
      <result>/ftl/user/home.ftl</result>
      <result name="input">/ftl/forms/reclassify-news.ftl</result>
      <result name="error">/ftl/forms/reclassify-news.ftl</result>
    </action>
  </package>

    <!-- This package handles actions that present the user with various forms for signin, registration, etc. -->
  <package name="forms" extends="app-default" namespace="/forms">
    <action name="change-password">
      <interceptor-ref name="simpleLoginStack" />
      <result>/ftl/forms/change-password.ftl</result>
    </action>

	 	<!-- login, register, forgot-password, new-file, rename-file, reclassify-news, browse-sources -->
    <action name="*"> <result>/ftl/forms/{1}.ftl</result> </action>
  </package>

  <package name="my-account" extends="app-default" namespace="/my-account">
    <default-interceptor-ref name="simpleLoginStack" />     
    <action name="change-password" class="newsrack.web.UserAction" method="changePassword">
      <result>/ftl/user/home.ftl</result>
      <result name="input">/ftl/forms/change-password.ftl</result>
      <result name="error">/ftl/forms/change-password.ftl</result>
    </action>

    <action name="edit-profile" class="newsrack.web.EditProfileAction">
      <result>/ftl/user/home.ftl</result>
      <result name="edit">/ftl/user/edit-profile.ftl</result>
    </action>

    <action name="home">
      <result>/ftl/user/home.ftl</result>
    </action>
  </package>

  <package name="password" extends="app-default" namespace="/password">
    <action name="send-reset-key" class="newsrack.web.PasswordResetAction" method="sendPasswordResetKey">
      <result>/ftl/forms/login.ftl</result>
      <result name="input">/ftl/forms/forgot-password.ftl</result>
    </action>

    <action name="reset-form" class="newsrack.web.PasswordResetAction" method="checkPasswordResetKey">
      <result>/ftl/user/reset-password.ftl</result>
      <result name="error">/ftl/forms/forgot-password.ftl</result>
    </action>

    <action name="reset" class="newsrack.web.PasswordResetAction" method="resetPassword">
      <interceptor-ref name="simpleLoginStack" />
      <result>/ftl/user/home.ftl</result>
      <result name="input">/ftl/user/reset-password.ftl</result>
      <result name="error" type="redirectAction">home</result>
    </action>
  </package>

    <!-- File related actions -->
  <package name="file" extends="app-default" namespace="/file">
    <default-interceptor-ref name="simpleLoginStack" />     
    <global-results>
      <result name="error">/ftl/user/edit-profile.ftl</result>
      <result name="success">/ftl/user/edit-profile.ftl</result>
    </global-results>

    <action name="edit" class="newsrack.web.FileAction" method="edit">
      <result>/ftl/forms/edit-file.ftl</result>
    </action>

      <!-- This needs the params interceptor -->
    <action name="upload" class="newsrack.web.FileAction" method="upload">
      <interceptor-ref name="simpleLoginFileStack" />
    </action>

    <action name="new" class="newsrack.web.FileAction" method="createNew" />

	 	<!-- display, download, copy, save, rename -->
    <action name="*" class="newsrack.web.FileAction" method="{1}" />
  </package>

    <!-- Administrative actions -->
  <package name="admin" extends="app-default" namespace="/admin">
    <default-interceptor-ref name="simpleLoginStack" />     
    <global-results>
      <result name="error">/ftl/user/home.ftl</result>
      <result name="success">/ftl/admin/home.ftl</result>
    </global-results>

    <action name="home">
      <result>/ftl/admin/home.ftl</result>
    </action>

    <action name="change-user" class="newsrack.web.AdminAction" method="loginAsAnotherUser">
      <result>/ftl/user/home.ftl</result>
      <result name="input">/ftl/admin/home.ftl</result>
    </action>

    <action name="show-stats" class="newsrack.web.AdminAction" method="showStats">
      <result>/ftl/admin/stats.ftl</result>
    </action>

    <action name="refresh-caching-rules" class="newsrack.web.AdminAction" method="refreshCachingRules" />
    <action name="refresh-global-properties" class="newsrack.web.AdminAction" method="refreshGlobalProperties" />
    <action name="clear-cache" class="newsrack.web.AdminAction" method="clearCache" />
    <action name="make-read-only" class="newsrack.web.AdminAction" method="makeReadOnly" />
    <action name="make-read-write" class="newsrack.web.AdminAction" method="makeReadWrite" />
  </package>

    <!-- Various api calls -->
  <package name="api" extends="app-default" namespace="/api">
    <global-results>
      <result name="error">/ftl/api/error.ftl</result>
	 </global-results>

    <action name="issue-taxonomy" class="newsrack.web.api.IssueAction" method="getTaxonomy">
	   <result name="xml">
		  <param name="location">/ftl/api/taxonomy.xml.ftl</param>
		  <param name="contentType">text/xml</param>
		</result>
	   <result name="json">
		  <param name="location">/ftl/api/taxonomy.json.ftl</param>
		  <param name="contentType">text/json</param>
		</result>
	 </action>

    <action name="sources" class="newsrack.web.api.IssueAction" method="getMonitoredSources">
	   <result name="xml">
		  <param name="location">/ftl/api/sources.xml.ftl</param>
		  <param name="contentType">text/xml</param>
		</result>
	   <result name="json">
		  <param name="location">/ftl/api/sources.json.ftl</param>
		  <param name="contentType">text/json</param>
		</result>
	 </action>

	 <action name="news*" class="newsrack.web.api.NewsAction" method="getNews{1}">
	   <result name="xml">
		  <param name="location">/ftl/api/news{1}.xml.ftl</param>
		  <param name="contentType">text/xml</param>
		</result>
	   <result name="json">
		  <param name="location">/ftl/api/news{1}.json.ftl</param>
		  <param name="contentType">text/json</param>
		</result>
	 </action>
  </package>

    <!-- HELP! -->
  <package name="help" extends="app-default" namespace="/help">
	 	<!-- user-guide, help, example1, example2, example3 -->
    <action name="*"> <result>/ftl/help/{1}.ftl</result> </action>
  </package>

    <!-- Various about pages! -->
  <package name="about" extends="app-default" namespace="/about">
	 	<!-- about, credits, contact, disclaimer, faq, testimonials -->
    <action name="*"> <result>/ftl/about/{1}.ftl</result> </action>
  </package>

    <!-- Extras -->
  <package name="extras" extends="app-default" namespace="/extras">
    <action name="known-indian-feeds" class="newsrack.web.MiscAction" method="knownIndianFeeds"> 
      <result>/ftl/extras/known.indian.feeds.ftl</result> 
    </action>
    <action name="crawled-feeds"> <result>/ftl/extras/crawled.feeds.ftl</result> </action>
  </package>
</struts>
